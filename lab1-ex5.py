# This exercise aims to introduce you to a very basic concept of hashing algorithms, how they work, why they are useful and what are their weaknesses. And along the way you'll pick up the principle behind the flaw of hashing functions.
# Do you remember at some lesson I explained to you about the birthday paradox that was used creating birthday attack. Now you're gone make the birthday attack with the md5 hashing algorithm. Your task ahead is to find collisions for this algorithm, (only for the first 40 bits of the hash, aka first 10 hex characters).
# You have to write a small program that would eventually find a collision for the first 40 bits generated by the md5 algorithm.

import hashlib
import random

def compareHash(h1, h2):
    return h1[0:10] == h2[0:10]

numberOfBirthday = int(input("Enter number of birthdays: "))

birthdays = []
for i in range(numberOfBirthday):
    result = str(random.randint(1,30))+"/"+str(random.randint(1,12))
    birthdays.append(str(result))


hashedBirthdays = []

for i in range(numberOfBirthday):
    result = hashlib.md5(birthdays[i].encode())
    hashedBirthdays.append(result)


equal=0
for i in range(numberOfBirthday-1):
    for j in range(i+1, numberOfBirthday):
        if compareHash(str(hashedBirthdays[i].hexdigest()),str(hashedBirthdays[j].hexdigest())) :
            equal +=1
            print(birthdays[i],":",hashedBirthdays[i].hexdigest()," =>",birthdays[j],' :',hashedBirthdays[i].hexdigest()," i:",i)

print(equal)
